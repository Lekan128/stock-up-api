name: Deploy Spring Boot to EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stockup-business-app:latest

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          known_hosts: ${{ secrets.EC2_KNOWN_HOSTS }}

      - name: Deploy application
        env:
          DB_HOST: ${{ vars.DB_HOST }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          REFRESH_TOKEN_EXPIREY: ${{ vars.REFRESH_TOKEN_EXPIREY }}
          ACCES_TOKEN_EXPIREY: ${{ vars.ACCES_TOKEN_EXPIREY }}
          JWT_SECRETE_KEY: ${{ secrets.JWT_SECRETE_KEY }}
          AWS_BUCKET_NAME: ${{ vars.AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRETE_KEY: ${{ secrets.AWS_SECRETE_KEY }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/stockup-business-app:latest
            sudo docker stop stockup-business-app || true
            sudo docker rm stockup-business-app || true
            sudo docker run -d \
              --name stockup-business-app \
              -p 8080:8080 \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PORT=$DB_PORT \
              -e DB_NAME=$DB_NAME \
              -e DB_PASSWORD= $DB_PASSWORD \
              -e ACCES_TOKEN_EXPIREY=$ACCES_TOKEN_EXPIREY \
              -e REFRESH_TOKEN_EXPIREY=$REFRESH_TOKEN_EXPIREY \
              -e JWT_SECRETE_KEY= $JWT_SECRETE_KEY \
              -e AWS_BUCKET_NAME=$AWS_BUCKET_NAME \
              -e AWS_ACCESS_KEY= $AWS_ACCESS_KEY \
              -e AWS_SECRETE_KEY= $AWS_SECRETE_KEY \
              ${{ secrets.DOCKERHUB_USERNAME }}/stockup-business-app:latest
